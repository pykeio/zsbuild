/* automatically generated by rust-bindgen 0.69.4 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Location {
	pub file: *const ::std::os::raw::c_char,
	pub file_len: usize,
	pub namespace_: *const ::std::os::raw::c_char,
	pub namespace_len: usize,
	pub line: i64,
	pub column: i64,
	pub length: i64,
	pub line_text: *const ::std::os::raw::c_char,
	pub line_text_len: usize,
	pub suggestion: *const ::std::os::raw::c_char,
	pub suggestion_len: usize
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Note {
	pub text: *const ::std::os::raw::c_char,
	pub text_len: usize,
	pub location: *mut Location
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Message {
	pub id: *const ::std::os::raw::c_char,
	pub id_len: usize,
	pub plugin_name: *const ::std::os::raw::c_char,
	pub plugin_name_len: usize,
	pub text: *const ::std::os::raw::c_char,
	pub text_len: usize,
	pub location: *mut Location,
	pub notes: *mut Note,
	pub notes_len: usize
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ContextResult {
	pub messages: *mut Message,
	pub messages_len: usize
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OutputFile {
	pub path: *const ::std::os::raw::c_char,
	pub path_len: usize,
	pub hash: *const ::std::os::raw::c_char,
	pub hash_len: usize,
	pub contents: *const ::std::os::raw::c_char,
	pub contents_len: usize
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct BuildResult {
	pub output_files: *mut OutputFile,
	pub output_files_len: usize,
	pub errors: *mut Message,
	pub errors_len: usize,
	pub warnings: *mut Message,
	pub warnings_len: usize
}
pub type BuildAsyncCallback = ::std::option::Option<unsafe extern "C" fn(result: *mut BuildResult, data: *mut ::std::os::raw::c_void)>;
extern "C" {
	pub fn Zsb_BuildAsyncCallback_Dispatch(callback: BuildAsyncCallback, result: *mut BuildResult, data: *mut ::std::os::raw::c_void);
}
pub type PluginBuildCallback = ::std::option::Option<unsafe extern "C" fn(handle: u64, data: *mut ::std::os::raw::c_void)>;
extern "C" {
	pub fn Zsb_PluginBuildCallback_Dispatch(callback: PluginBuildCallback, handle: u64, data: *mut ::std::os::raw::c_void);
}
pub type PluginDestructor = ::std::option::Option<unsafe extern "C" fn(data: *mut ::std::os::raw::c_void)>;
extern "C" {
	pub fn Zsb_PluginDestructor_Dispatch(callback: PluginDestructor, data: *mut ::std::os::raw::c_void);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PluginOnStartResult {
	pub errors: *mut Message,
	pub errors_len: usize,
	pub warnings: *mut Message,
	pub warnings_len: usize
}
extern "C" {
	pub fn Zsb_PluginOnStartResult_Destroy(res: *mut PluginOnStartResult);
}
pub type PluginCallbackOnStart = ::std::option::Option<unsafe extern "C" fn(data: *mut ::std::os::raw::c_void) -> *mut PluginOnStartResult>;
extern "C" {
	pub fn Zsb_PluginCallbackOnStart_Dispatch(callback: PluginCallbackOnStart, data: *mut ::std::os::raw::c_void) -> *mut PluginOnStartResult;
}
pub type GoUint8 = ::std::os::raw::c_uchar;
pub type GoUint16 = ::std::os::raw::c_ushort;
pub type GoUint64 = ::std::os::raw::c_ulonglong;
extern "C" {
	pub fn Zsb_Context_Create(optionsHandle: GoUint64, outHandle: *mut GoUint64) -> *mut ContextResult;
}
extern "C" {
	pub fn Zsb_ContextResult_Destroy(res: *mut ContextResult);
}
extern "C" {
	pub fn Zsb_Context_Build(handle: GoUint64) -> *mut BuildResult;
}
extern "C" {
	pub fn Zsb_Build(optionsHandle: GoUint64) -> *mut BuildResult;
}
extern "C" {
	pub fn Zsb_Context_BuildAsync(handle: GoUint64, callback: BuildAsyncCallback, data: *mut ::std::os::raw::c_void);
}
extern "C" {
	pub fn Zsb_BuildAsync(optionsHandle: GoUint64, callback: BuildAsyncCallback, data: *mut ::std::os::raw::c_void);
}
extern "C" {
	pub fn Zsb_BuildResult_Destroy(c: *mut BuildResult);
}
extern "C" {
	pub fn Zsb_Context_Cancel(handle: GoUint64);
}
extern "C" {
	pub fn Zsb_Context_Destroy(handle: GoUint64);
}
extern "C" {
	pub fn Zsb_BuildOptions_Create() -> GoUint64;
}
extern "C" {
	pub fn Zsb_BuildOptions_Bundle(handle: GoUint64, enable: GoUint8) -> GoUint16;
}
extern "C" {
	pub fn Zsb_BuildOptions_AppendEntryPoint(
		handle: GoUint64,
		input: *mut ::std::os::raw::c_char,
		inputLen: usize,
		output: *mut ::std::os::raw::c_char,
		outputLen: usize
	) -> GoUint16;
}
extern "C" {
	pub fn Zsb_BuildOptions_AddPlugin(handle: GoUint64, pluginHandle: GoUint64) -> GoUint64;
}
extern "C" {
	pub fn Zsb_BuildOptions_Destroy(handle: GoUint64);
}
extern "C" {
	pub fn Zsb_PluginBuilder_OnStart(handle: GoUint64, cb: PluginCallbackOnStart, data: *mut ::std::os::raw::c_void);
}
extern "C" {
	pub fn Zsb_Plugin_Create(
		name: *mut ::std::os::raw::c_char,
		nameLen: usize,
		callback: PluginBuildCallback,
		data: *mut ::std::os::raw::c_void,
		destructor: PluginDestructor
	) -> GoUint64;
}
extern "C" {
	pub fn Zsb_Plugin_Destroy(handle: GoUint64);
}
